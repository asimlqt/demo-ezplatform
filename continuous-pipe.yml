defaults:
  cluster: ${CLUSTER}
  environment:
    name: '"ezdemo-" ~ code_reference.branch'

variables:
  - name: SYMFONY_ENV
    value: prod

pipelines:
  - name: Production
    condition: 'not(code_reference.branch matches "#^cpdev/#")'
    tasks: [ images, storage, setup, deployment ]
  - name: Remote
    condition: 'code_reference.branch matches "#^cpdev/#"'
    tasks: [ images, storage, setup, deployment ]
    variables:
      - name: SYMFONY_ENV
        value: dev

tasks:
  images:
    build:
      services:
        ez:
          image: quay.io/inviqa_images/ez-platform-demo
          naming_strategy: sha1

  storage:
    deploy:
      services:
        database:
          specification:
            volumes:
              - type: persistent
                name: database-volume
                capacity: 5Gi
                storage_class: default

            volume_mounts:
              - name: database-volume
                mount_path: /var/lib/mysql

            command:
              - /usr/local/bin/docker-entrypoint.sh
              - mysqld
              - --ignore-db-dir=lost+found
              - --max_allowed_packet=128M

            ports:
              - 3306

            resources:
              requests:
                cpu: 50m
                memory: 250Mi

              limits:
                cpu: 500m
                memory: 2Gi

          deployment_strategy:
            readiness_probe:
              type: tcp
              port: 3306

  deployment:
    deploy:
      services:
        proxy:
          endpoints:
            -
              name: proxy
              cloud_flare_zone:
                zone_identifier: ${CLOUD_FLARE_ZONE}
                authentication:
                  email: ${CLOUD_FLARE_EMAIL}
                  api_key: ${CLOUD_FLARE_API_KEY}
                proxied: true
                record_suffix: '-ezdemo.webpipeline.net'
              ingress:
                class: nginx
                host_suffix: '-ezdemo.webpipeline.net'
          specification:
            ports:
              - 80
              - 443
            environment_variables:
              - name: AUTH_HTTP_ENABLED
                value: "true"
              - name: AUTH_HTTP_HTPASSWD
                value: ${AUTH_HTTP_HTPASSWD}
              - name: AUTH_IP_WHITELIST_ENABLED
                value: true
              - name: AUTH_IP_WHITELIST
                value: ${AUTH_IP_WHITELIST}
              - name: TRUSTED_REVERSE_PROXIES
                value: ${TRUSTED_REVERSE_PROXIES}

        ez:
          specification:
            ports:
              - 443
            environment_variables: &WEB_ENV_VARS
              - name: SYMFONY_ENV
                value: ${SYMFONY_ENV}
              - name: DATABASE_NAME
                value: ${DATABASE_NAME}
              - name: DATABASE_USER
                value: ${DATABASE_USER}
              - name: DATABASE_PASSWORD
                value: ${DATABASE_PASSWORD}
              - name: DATABASE_ROOT_PASSWORD
                value: ${DATABASE_ROOT_PASSWORD}
              - name: SYMFONY_SECRET
                value: ${SYMFONY_SECRET}

  setup:
    run:
      image:
        from_service: ez
      commands:
        - container setup
      environment_variables:
        <<: *WEB_ENV_VARS
